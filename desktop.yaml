- name: Arch Linux AUR-only desktop setup
  hosts: localhost
  become: true
  vars:
    user_name: xmegaherox11

  tasks:
    - name: Enable multilib repository and uncomment mirrorlist
      blockinfile:
        path: /etc/pacman.conf
        block: |
          [multilib]
          Include = /etc/pacman.d/mirrorlist
        marker: "# {mark} MULTILIB REPO"

    - name: Update package databases and system
      pacman:
        update_cache: yes
        upgrade: yes
    
    - name: Force refresh package databases
      pacman:
        update_cache: yes
        force: yes

    - name: Set GRUB timeout to 0 for immediate boot
      become: yes
      lineinfile:
        path: /etc/default/grub
        regexp: '^GRUB_TIMEOUT='
        line: 'GRUB_TIMEOUT=0'
        create: yes
      notify: Update grub config
    
    - name: Install Hyprland Stuff
      pacman:
        name:
          - hyprland # hyprland
          - neovim # text editor
          - kitty # terminal
          - rofi # app launcher      
          - thunar # file browser
          - thunar-archive-plugin  # file browser archive
          - hyprpaper # wallpaper
          - hyprlock # lockscreen
          - waybar # top bar
          - nwg-look # theme for gtk apps
          - swaync # notification tool
          - hypridle # idle
          - hyprcursor # cursor
          - hyprsunset # blue light filter
          - pipewire # screen sharing
          - xdg-desktop-portal-hyprland # screen sharing
          - starship # terminal theming
          - ttf-cascadia-code-nerd # font
          - kdegraphics-thumbnailers # thumbnails in dolphin
        state: present

    - name: Install Drivers
      pacman:
        name:
          - htop 
          - libarchive
          - pipewire # audio
          - pipewire-pulse # audio
          - blueman # bluetooth
          - bluez # bluetooth
          - bluez-utils # bluetooth
          - brightnessctl # brightness
          - cups
          - base-devel
          - git
          - ansible
          - mesa
          - lib32-mesa
          - vulkan-radeon
          - lib32-vulkan-radeon
          - libva-mesa-driver
          - lib32-libva-mesa-driver
          - libva-utils

    - name: Install Software
      pacman:
        name:
         - rclone
       #  - gimp
         - vlc
         - libreoffice-fresh
         - nextcloud-client
         - lutris
         - bitwarden
         - firefox
         - steam
        # - chromium
        state: present

    - name: disable need for password for pacman to allow yay install
      lineinfile:
        path: /etc/sudoers.d/temp_allow_no_pswd_pacman
        state: present
        line: "ALL ALL=NOPASSWD: /usr/bin/pacman"
        validate: /usr/sbin/visudo -cf %s
        create: yes

    - name: git clone yay-bin repo in to /tmp
      become: no
      git:
        repo: 'https://aur.archlinux.org/yay-bin.git'
        dest: /tmp/yay-bin
        clone: yes

    - name: install yay using makepkg
      become: no
      expect:
        chdir: /tmp/yay-bin
        command: makepkg -si
        responses:
          (?i)Proceed with installation: "y"

    - name: re-enable need for password for pacman
      file:
        path: /etc/sudoers.d/temp_allow_no_pswd_pacman
        state: absent

    - name: set yay options to cleanafter package installation
      become: no
      shell: yay -Y --answerclean All --removemake --cleanafter --save
      args:
        executable: /usr/bin/bash

    - name: Ensure .bash_profile contains Hyprland autostart
      become: true
      lineinfile:
        path: "/home/{{ user_name }}/.bash_profile"
        line: '[[ -z $DISPLAY && $XDG_VTNR -eq 1 ]] && exec Hyprland'
        create: yes
        state: present
    
    - name: Remove 'autogenerated = 1' from Hyprland config
      ansible.builtin.lineinfile:
        path: "/home/{{ user_name }}/.config/hypr/hyprland.conf"
        regexp: '^\s*autogenerated\s*=\s*1\s*$'
        state: absent
        backup: yes

    - name: Set Hyprland keyboard layout to 'de'
      ansible.builtin.lineinfile:
        path: "/home/{{user_name}}/.config/hypr/hyprland.conf"
        regexp: '^input:kb_layout\s*='
        line: 'input:kb_layout = de'
        create: yes
        backup: yes

    - name: Ensure background_opacity is set to 0.9 in kitty.conf
      ansible.builtin.lineinfile:
        path: "/home/{{user_name}}/.config/kitty/kitty.conf"
        regexp: '^background_opacity\s+'
        line: 'background_opacity 0.9'
        insertafter: EOF
        state: present
        create: yes
    
    - name: Set font_family in kitty.conf to Caskaydia Cove Nerd Font
      ansible.builtin.lineinfile:
        path: "/home/{{user_name}}/.config/kitty/kitty.conf"
        regexp: '^font_family\s+'
        line: 'font_family Caskaydia Cove Nerd Font'
        create: yes

    - name: Set the system time zone to Berlin
      command:
        cmd: timedatectl set-timezone Europe/Berlin

    - name: Set the system keyboard layout to German
      command:
        cmd: localectl set-keymap de

    - name: Check if omega folder exists
      stat:
        path: "/home/{{ user_name }}/omega"
      register: omega_folder

    - name: Ensure unzip is installed
      package:
        name: unzip
        state: present
      when: not omega_folder.stat.exists

    - name: Download omega linux-x64.zip using curl
      shell: |
        curl -L https://github.com/duelists-unite/omega-releases/releases/download/Latest/linux-x64.zip -o /tmp/linux-x64.zip
      args:
        creates: /tmp/linux-x64.zip
      when: not omega_folder.stat.exists

    - name: Unzip omega archive into user home directory
      unarchive:
        src: /tmp/linux-x64.zip
        dest: "/home/{{ user_name }}/omega"
        remote_src: yes
        creates: "/home/{{ user_name }}/omega"
      become: yes
      become_user: "{{ user_name }}"
      when: not omega_folder.stat.exists

    - name: Check if emudeck is installed
      ansible.builtin.shell: pacman -Qi emudeck
      register: emudeck_check
      failed_when: false
      changed_when: false
    
    - name: Install emudeck via yay if not installed
      ansible.builtin.shell: yay -S --noconfirm emudeck
      args:
        executable: /bin/bash
      when: emudeck_check.rc != 0

    - name: Check if jellyfin is installed
      ansible.builtin.shell: pacman -Qi jellyfin
      register: jellyfin_check
      failed_when: false
      changed_when: false
    
    - name: Install jellyfin via yay if not installed
      ansible.builtin.shell: yay -S --noconfirm jellyfin
      args:
        executable: /bin/bash
      when: jellyfin_check.rc != 0

    - name: Check if jellyfin-amp is installed
      ansible.builtin.shell: pacman -Qi jellyfin-amp
      register: jellyfin_amp_check
      failed_when: false
      changed_when: false
    
    - name: Install jellyfin-amp via yay if not installed
      ansible.builtin.shell: yay -S --noconfirm jellyfin-amp
      args:
        executable: /bin/bash
      when: jellyfin_amp_check.rc != 0

    - name: Check if vesktop is installed
      ansible.builtin.shell: pacman -Qi vesktop
      register: vesktop_check
      failed_when: false
      changed_when: false
    
    - name: Install vesktop via yay if not installed
      ansible.builtin.shell: yay -S --noconfirm vesktop
      args:
        executable: /bin/bash
      when: vesktop_check.rc != 0
        
  handlers:
    - name: Update grub config
      become: yes
      command: grub-mkconfig -o /boot/grub/grub.cfg
